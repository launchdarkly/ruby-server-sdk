version: 2.1

orbs:
  rubocop: hanachin/rubocop@0.0.6
  win: circleci/windows@5.0

workflows:
  version: 2
  test:
    jobs:
      - rubocop/rubocop:
          after-install-rubocop:
            - run: gem install rubocop-performance
      - build-test-windows
      - build-test-linux:
          name: Ruby 2.7
          docker-image: cimg/ruby:2.7
      - build-test-linux:
          name: Ruby 3.0
          docker-image: cimg/ruby:3.0
      - build-test-linux:
          name: Ruby 3.1
          docker-image: cimg/ruby:3.1
      - build-test-linux:
          name: JRuby 9.4
          docker-image: jruby:9.4-jdk
          jruby: true

jobs:
  build-test-windows:
    executor: win/default

    steps:
      - checkout

      - run:
          name: "Setup DynamoDB"
          command: |
            iwr -outf dynamo.zip https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.zip
            mkdir dynamo
            Expand-Archive -Path dynamo.zip -DestinationPath dynamo
      - run:
          name: "Run DynamoDB"
          background: true
          working_directory: dynamo
          command: javaw -D"java.library.path=./DynamoDBLocal_lib" -jar DynamoDBLocal.jar

      - run:
          name: "Setup Consul"
          command: |
            iwr -outf consul.zip https://releases.hashicorp.com/consul/1.14.3/consul_1.14.3_windows_amd64.zip
            mkdir consul
            Expand-Archive -Path consul.zip -DestinationPath consul
      - run:
          name: "Run Consul"
          background: true
          working_directory: consul
          command: .\consul.exe agent -dev -client 0.0.0.0

      - run:
          name: "Setup Redis"
          command: |
            iwr -outf redis.zip https://github.com/MicrosoftArchive/redis/releases/download/win-3.0.504/Redis-x64-3.0.504.zip
            mkdir redis
            Expand-Archive -Path redis.zip -DestinationPath redis
            cd redis
            ./redis-server --service-install
      - run:
          name: "Run Redis"
          background: true
          working_directory: redis
          command: ./redis-server --service-start

      - run: ruby -v
      - run: choco install msys2 -y
      - run: ridk.cmd install 3 # Install MINGW dev toolchain

      - run: gem install bundler -v 2.2.33
      - run: bundle _2.2.33_ install
      - run: mkdir /tmp/circle-artifacts
      - run: bundle _2.2.33_ exec rspec --format documentation --format RspecJunitFormatter -o /tmp/circle-artifacts/rspec.xml spec

      - store_test_results:
          path: /tmp/circle-artifacts
      - store_artifacts:
          path: /tmp/circle-artifacts

  build-test-linux:
    parameters:
      docker-image:
        type: string
      jruby:
        type: boolean
        default: false

    docker:
      - image: <<parameters.docker-image>>
      - image: consul
      - image: redis
      - image: amazon/dynamodb-local

    steps:
      - checkout
      - when:
          condition: <<parameters.jruby>>
          steps:
            - run: gem install jruby-openssl -v 0.11.0  # required by bundler, no effect on Ruby MRI
            - run: apt-get update -y && apt-get install -y build-essential
      - when:
          condition:
             not: <<parameters.jruby>>
          steps:
            - run: sudo apt-get update -y && sudo apt-get install -y build-essential
      - run: ruby -v
      - run: gem install bundler -v 2.2.33
      - run: bundle _2.2.33_ install
      - run: mkdir /tmp/circle-artifacts
      - run: bundle _2.2.33_ exec rspec --format documentation --format RspecJunitFormatter -o /tmp/circle-artifacts/rspec.xml spec

      - when:
          condition:
             not: <<parameters.jruby>>
          steps:
            - run: make build-contract-tests
            - run:
                command: make start-contract-test-service
                background: true
            - run: TEST_HARNESS_PARAMS="-junit /tmp/circle-artifacts/contract-tests-junit.xml" make run-contract-tests

      - store_test_results:
          path: /tmp/circle-artifacts
      - store_artifacts:
          path: /tmp/circle-artifacts
