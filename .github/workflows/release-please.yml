name: Run Release Please

on:
  push:
    branches:
      - main

jobs:
  release-package:
    runs-on: ubuntu-latest

    permissions:
      contents: write # Contents and pull-requests are for release-please to make releases.
      pull-requests: write

    outputs:
      release-created: ${{ steps.release.outputs.release_created }}
      upload-tag-name: ${{ steps.release.outputs.tag_name }}

    steps:
      - uses: googleapis/release-please-action@v4
        id: release

  build-ruby-gem:
    needs: [ 'release-package' ]
    if: ${{ needs.release-package.outputs.release-created == 'true' }}
    uses: ./.github/workflows/build-gem.yml
    with:
      version: '3.0'

  build-jruby-gem:
    needs: [ 'release-package' ]
    if: ${{ needs.release-package.outputs.release-created == 'true' }}
    uses: ./.github/workflows/build-gem.yml
    with:
      version: 'jruby-9.4'

  publish:
    runs-on: ubuntu-latest
    needs: [ 'release-package', 'build-ruby-gem', 'build-jruby-gem' ]
    if: ${{ needs.release-package.outputs.release-created == 'true' }}

    outputs:
      gem-hash: ${{ steps.publish.outputs.gem-hash }}

    permissions:
      id-token: write # Needed if using OIDC to get release secrets.
      contents: write # Contents and pull-requests are for release-please to make releases.

    steps:
      - uses: ./.github/actions/setup
        with:
          version: '3.0'
          install-dependencies: false

      - uses: launchdarkly/gh-actions/actions/release-secrets@release-secrets-v1.2.0
        name: 'Get rubygems API key'
        with:
          aws_assume_role: ${{ vars.AWS_ROLE_ARN }}
          ssm_parameter_pairs: '/production/common/releasing/rubygems/api_key = GEM_HOST_API_KEY'

      - uses: ./.github/actions/build-docs

      - uses: ./.github/actions/publish
        id: publish
        with:
          dry_run: false

      - uses: ./.github/actions/publish-docs
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  release-provenance:
    needs: [ 'release-package', 'publish' ]
    if: ${{ needs.release-package.outputs.release-created == 'true' }}

    permissions:
      actions: read
      id-token: write
      contents: write

    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0
    with:
      base64-subjects: "${{ needs.publish.outputs.gem-hash }}"
      upload-assets: true
      upload-tag-name: ${{ needs.release-package.outputs.upload-tag-name }}
